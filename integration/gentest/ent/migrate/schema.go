// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// RefTableColumns holds the columns for the "ref_table" table.
	RefTableColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
	}
	// RefTableTable holds the schema information for the "ref_table" table.
	RefTableTable = &schema.Table{
		Name:       "ref_table",
		Columns:    RefTableColumns,
		PrimaryKey: []*schema.Column{RefTableColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ref_table_users_refs",
				Columns:    []*schema.Column{RefTableColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 45},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "money", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "DECIMAL(10,6)", "postgres": "DECIMAL(10,6)", "sqlite3": "TEXT"}},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Size: 255},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		RefTableTable,
		UsersTable,
	}
)

func init() {
	RefTableTable.ForeignKeys[0].RefTable = UsersTable
	RefTableTable.Annotation = &entsql.Annotation{
		Table: "ref_table",
	}
}
